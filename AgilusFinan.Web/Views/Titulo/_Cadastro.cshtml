@using AgilusFinan.Web.ViewModels
@model TituloViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.TituloRecorrenteId)
    
    <div class="form-horizontal">
        <h4>Titulo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ContaId, "ContaId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataVencimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaId, "CategoriaId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="CategoriaId" id="CategoriaId" class="form-control">
                    @Html.Partial("~/Views/Categoria/_ItensCategoria.cshtml", new ItensCategoria() { Id = Model.CategoriaId, Lista = ViewBag.ListaCategorias })
                </select>
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PessoaId, "PessoaId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PessoaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CentroCustoId, "CentroCustoId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CentroCustoId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CentroCustoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Competencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Competencia,  new { htmlAttributes = new { @class= "form-control"}})
                @Html.ValidationMessageFor(model => model.Competencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <input type="checkbox" id="estapago" @(Model.Liquidacoes.Count > 0 ? "checked" : "")>
            <label class="control-label col-md-2">Pago?</label>
            <div class="col-md-10" id="divLiquidacoes"
                @{
    if (Model.Liquidacoes.Count == 0)
    {
                    <text>style="display: none;"</text>
    }
                }>
                @Html.Partial("~/Views/Titulo/_Liquidacao.cshtml", Model.Liquidacoes)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, null, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div>
        @Html.ActionLink("Voltar sem gravar", "Index")
    </div>

    <button class="btn btn-default" type="submit" onclick="UpdateTitulo();">Gravar</button>
}



<script>

    $('#estapago').click(function () {
        $('#divLiquidacoes').toggle();
    })

    function UpdateTitulo() {
        var tituloJson = GetData();
        $.ajax({
            type: "POST",
            url: '/@(ViewBag.TipoTitulo)/@(ViewBag.TipoOperacao == "Incluindo" ? "Create" : "Edit")',
            data: { "postedData": tituloJson },
            success: function () {
                window.location = '@Url.Action("Index", ViewBag.TipoTitulo)';
            }
        });
    }


    function GetData() {
        var titulo = {};

        titulo.Id = $('#Id').val();
        titulo.TituloRecorrenteId = $('#TituloRecorrenteId').val();
        titulo.ContaId = $('#ContaId').val();
        titulo.DataVencimento = $('#DataVencimento').val();
        titulo.Descricao = $('#Descricao').val();
        titulo.Valor = $('#Valor').val().replace('.','').replace(',', '.');
        titulo.CategoriaId = $('#CategoriaId').val();
        titulo.PessoaId = $('#PessoaId').val();
        titulo.CentroCustoId = $('#CentroCustoId').val();
        titulo.Competencia = $('#Competencia').val();
        titulo.Observacao = $('#Observacao').val();
        if (document.getElementById('estapago').checked) {
            titulo.Liquidacoes = tabLiquidacoes.data;
        }

        return JSON.stringify(titulo);
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    Utils.createMask(document.getElementById("Valor"), "moeda");
</script>