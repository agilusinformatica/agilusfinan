@{
    ViewBag.Title = "Vinculo de Titulos";
}

@using AgilusFinan.Domain.Entities
@model List<ConciliacaoExtrato>
<h2>Vinculo Extrato/Titulos</h2>

@{
    var extratoId = 0;
}

<div id="vinculoBuscaDialog" class="dialog" style="display:none" title="Vincular títulos">
    <div id="painel-periodo">
        @Html.Partial("_PainelPeriodo")
        <hr />
        <div class="table-responsive" id="lista"></div>
    </div>
</div>

<div id="cadastroTituloDialog" class="dialog" style="display: none" title="Cadastrar título">
    <div class="form-horizontal">
        @*@Html.Partial("_CadastroTitulo", new TituloViewModel() { TipoTitulo = "Recebimento" })*@
    </div>
</div>

<div class="container">

    <div class="row body-vinculo" style="display: none; opacity: 0.0">
        <div class="col-sm-offset-1 col-md-10">
            @foreach (var vinculo in Model)
            {
                <div class="row item-vinculo" data-extratoid=@extratoId>

                    <div class="row item-extrato">
                        <div class="col-sm-offset-1 col-sm-10 ">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th style="display: none">ID</th>
                                        <th>Data Lancamento</th>
                                        <th>Descricao</th>
                                        <th>Valor</th>
                                        <th>Tipo de lançamento</th>
                                    </tr>
                                </thead>

                                <tbody>
                                    <tr>
                                        <td style="display: none">@vinculo.Id</td>
                                        <td>@vinculo.DataLancamento.Date.ToShortDateString()</td>
                                        <td>@vinculo.Descricao</td>
                                        <td>@vinculo.Valor</td>
                                        <td>@vinculo.TipoLancamento</td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>
                    </div>

                    <br />

                    <div class="row item-display">
                        <div class="col-sm-offset-1 col-md-10">
                            <p>Total:<span id="valorSomatoria">0.00</span></p>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-offset-1 col-sm-10">
                            <div class="btn-group btn-group-sm" role="toolbar" aria-label="...">
                                <button class="btn btn-default vincularTitulos" data-botaoid=@extratoId>Buscar</button>
                                <button class="btn btn-default adicionarTitulo" data-botaoid=@extratoId>Adicionar</button>

                            </div>
                        </div>
                    </div>

                    <br />

                    <div class="row">
                        <div class="col-sm-12 col-lg-12">
                            <div class="table-responsive">
                                <table class="table table-hover" id="titulosVinculados" style="display: none">
                                    <thead>
                                        <tr>
                                            <th style="display: none">RowId</th>
                                            <th style="display: none">ID</th>
                                            <th style="display: none"> Titulo Recorrente</th>
                                            <th>Operação</th>
                                            <th>Conta</th>
                                            <th>Data de vencimento</th>
                                            <th>Descrição</th>
                                            <th>Valor</th>
                                            <th>Categoria</th>
                                            <th>Pessoa</th>
                                            <th>Acréscimos</th>
                                            <th>Descontos</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>

                    <h4 id="alerta">Nenhum título está vinculado a este item.</h4>

                    @{
                extratoId = extratoId + 1;
                    }

                </div>
            }
        </div>
    </div>

    <hr />

    <div>
        <div class="row">
            <div class="btn-group btn-group-md">
                <button class="btn btn-default" id="efetivar" disabled="disabled">Efetivar</button>
            </div>
        </div>
        <br />

        <div id="itens-validados-wraper" style="display: none">
            <p>Os seguintes itens estão com a soma de titulos pendentes desigual ao valor total do item do extrato:</p>
            <ul id="item-nao-validados"></ul>
        </div>

    </div>

</div>

<script>
    var conciliacaoExtratoController = (function () {

        //variaveis
        var tasks =[];
        var task;
        var rowIndex = 0;

        //objeto extrato
        var convertDate = function (date) {
            var dia = date.substring(0, 2);
            var mes = date.substring(3, 5);
            var ano = date.substring(6, 10);

            return mes + "/" + dia + "/" + ano;
        };

        var ItemExtratoDOM = function(element) {
            this.element = element;

            var setTitulosVinculados = function (titulos) {
                var tableVinculo = this.element.find("#titulosVinculados");
                var alert = this.element.find('#alerta');

                tableVinculo.show();

                for (var i = 0; i < titulos.length; i++) {
                    var tr = document.createElement('tr');
                    var titulo = titulos[i];

                    tr.innerHTML =
                        '<td style="display: none;">' + titulo.RowIndex + '</td>' +
                        '<td style="display: none;">' + titulo.TituloId + '</td>' +
                        '<td style="display: none;">' + titulo.TituloRecorrenteId + '</td>' +
                        '<td>' + titulo.Operacao + '</td>' +
                        '<td>' + titulo.NomeConta + '</td>' +
                        '<td>' + titulo.DataVencimento + '</td>' +
                        '<td>' + titulo.Descricao + '</td>' +
                        '<td>' + Utils.moneyFormatConvert(titulo.Valor.toFixed(2)) + '</td>' +
                        '<td>' + titulo.NomeCategoria + '</td>' +
                        '<td>' + titulo.NomePessoa + '</td>' +
                        '<td><input type="text" class="form-control" name="Acrescimo" value=' + titulo.Acrescimo.toFixed(2) + ' "></td>' +
                        '<td><input type="text" class="form-control" name="Desconto" value=' + titulo.Desconto.toFixed(2) + ' "></td>' +
                        '<td><input type="button" value="Excluir" name="Excluir"></td>';

                    tableVinculo.append(tr);
                    Utils.createMask($(tr).find('input[name="Acrescimo"]').get(0), 'moeda');
                    Utils.createMask($(tr).find('input[name="Desconto"]').get(0), 'moeda');
                }

                alert.html('');

                if (titulos.length == 0) {
                    tableVinculo.hide();
                    alert.html("Nenhum título está vinculado a este item.");
                }

            }

            var getItemExtrato = function() {
                var itemExtrato = {};
                var extratoColunas = this.element.find("table > tbody > tr > td");
                itemExtrato.Id = extratoColunas[0].innerHTML;
                itemExtrato.DataLancamento = convertDate(extratoColunas[1].innerHTML).substring(0, 10);
                itemExtrato.Descricao = extratoColunas[2].innerHTML;
                itemExtrato.Valor = parseFloat(extratoColunas[3].innerHTML.replace(",", "."));
                itemExtrato.TipoLancamento = extratoColunas[4].innerHTML;
                return itemExtrato;
            };

            var clear = function() {
                this.element.find('#titulosVinculados > tbody > tr').remove();
                this.element.find('#titulosCriar > tbody > tr').remove();
            };

            return {
                element: this.element,
                getItemExtrato: getItemExtrato,
                clear: clear,
                setTitulosVinculados: setTitulosVinculados
            }
        };

        var Task = function (id) {
            this.itemExtratoId = id;
            this.itemExtratoDOM = new ItemExtratoDOM($('[data-extratoId=' + id + ']'));
            this.itemExtrato = this.itemExtratoDOM.getItemExtrato();
            this.element = this.itemExtratoDOM.element;
            this.isNew = true;
            this.titulosSelecionados = [];
            this.titulosIncluidos = [];
            this.ignorar = false;
            this.selecionado = false;
            var that = this;
            var total = 0;

            var vincularTitulo = function(titulo) {
                that.titulosSelecionados.push(titulo);
            };

            var desvincularTitulo = function(titulo) {
                that.titulosSelecionados.forEach(function(t, index, titulos) {

                    if (titulo.RowIndex == t.RowIndex) {
                        titulos.splice(index, 1);
                    }
                });
            };

            var findTitulo = function(element) {
                var titulo;
                var rowIndex = element.closest('tr').children()[0].innerHTML;

                for (var i = 0; i < that.titulosSelecionados.length; i++) {
                    if (that.titulosSelecionados[i].RowIndex == rowIndex) {                        
                        titulo = that.titulosSelecionados[i];
                    }
                }

                for (var i = 0; i < that.titulosIncluidos.length; i++) {
                    if (that.titulosIncluidos[i].RowIndex == rowIndex) {
                        titulo = that.titulosIncluidos[i];
                    }
                }


                return titulo;
            }

            //Mudança de contexto 'this' para o objeto input pertecente a esta Task.
            that.element.on('input change', 'input[name="Acrescimo"]', function() {
                var titulo = findTitulo($(this));
                titulo.Acrescimo = $(this).val().replace(/\,|\./g, '') / 100;
                updateTotal.call(that);
            });

            that.element.on('input change', 'input[name="Desconto"]', function() {
                var titulo = findTitulo($(this));
                titulo.Desconto = $(this).val().replace(/\,|\./g, '') / 100;
                updateTotal.call(that);
            });

            that.element.on('click', 'input[name="Excluir"]', function() {
                var titulo = findTitulo.call(that, $(this));

                switch(titulo.Operacao) {

                    case 'novo':
                        that.titulosIncluidos.forEach(function(t, index, titulos) {
                            if (titulo.RowIndex == t.RowIndex) {
                                titulos.splice(index, 1);
                            }
                        });
                        break;

                    case 'vinculo':
                        desvincularTitulo.call(that, titulo);
                        break;
                }

                updateItemExtratoDOM.call(that);

            });

            var somaTitulos = function() {
                var soma = 0;
                if (this.titulosSelecionados) {
                    this.titulosSelecionados.forEach(function(titulo) {
                        soma += (titulo.Valor + parseFloat((titulo.Acrescimo ? titulo.Acrescimo : 0)) - parseFloat((titulo.Desconto ? titulo.Desconto : 0)));
                    });

                    this.titulosIncluidos.forEach(function(titulo) {
                        soma += (titulo.Valor + parseFloat((titulo.Acrescimo ? titulo.Acrescimo : 0)) - parseFloat((titulo.Desconto ? titulo.Desconto : 0)));
                    });

                    return soma;
                } else {
                    return 0;
                }
            };

            var comparaSomaValorTotal = function() {
                return this.somaTitulos() === Math.abs(this.itemExtrato.Valor);
            }

            var titulosSomaIncompativel = function() {
                var itemList = [];
                var totalTasksSemVinculo = 0;

                tasks.forEach(function(t) {
                    if (!t.comparaSomaValorTotal() && (t.titulosSelecionados.length > 0 || t.titulosIncluidos.length > 0)) {
                        itemList.push(t);
                    }

                    if (t.titulosIncluidos.length == 0 && t.titulosSelecionados.length == 0) {
                        totalTasksSemVinculo++;
                    }
                });

                if (itemList.length > 0) {
                    var li = '';

                    for (var i = 0; i < itemList.length; i++) {
                        li += '<li data-extratolinhaid='+ itemList[i].itemExtratoId +'><a>' + itemList[i].itemExtrato.DataLancamento + ' - ' + itemList[i].itemExtrato.Descricao + ': ' + itemList[i].itemExtrato.Valor + '</a></li>';
                    }

                    $('#item-nao-validados').html(li);
                    $('#item-nao-validados').closest('div').show();
                    $('#efetivar').prop('disabled', true);

                } else {
                    $('#item-nao-validados').html('');
                    $('#item-nao-validados').closest('div').hide();
                    $('#efetivar').prop('disabled', false);

                }

                if (tasks.length == 0) {
                    $('#efetivar').prop('disabled', true);

                }
                
                if (totalTasksSemVinculo == tasks.length) {
                    $('#efetivar').prop('disabled', true);
                }
            
            }

            var updateTotal = function() {
                total = somaTitulos.call(that);
                that.element.find('#valorSomatoria').html(total.toFixed(2));

                if (Math.abs(total) != Math.abs(that.itemExtrato.Valor)) {
                    that.element.css('background-color', '#FFBABA');

                } else {
                    that.element.css('background-color', '#67F097');
                }

                if (total == 0) {
                    that.element.css('background-color', 'grey');
                }

                titulosSomaIncompativel();
            }

            var updateItemExtratoDOM = function() {
                this.itemExtratoDOM.clear();
                updateTotal.call(this);
                var temp = [];

                this.titulosSelecionados.forEach(function(ts) {
                    temp.push(ts);
                });

                this.titulosIncluidos.forEach(function(ti) {
                    temp.push(ti);
                });

                this.itemExtratoDOM.setTitulosVinculados(temp);

            };

            return {
                itemExtratoId: this.itemExtratoId,
                itemExtrato: this.itemExtrato,
                itemExtratoDOM: this.itemExtratoDOM,
                updateItemExtratoDOM: updateItemExtratoDOM,
                extratoElement: this.extratoElement,
                selectionado: this.selecionado,
                isNew: this.isNew,
                titulosSelecionados: this.titulosSelecionados,
                titulosIncluidos: this.titulosIncluidos,
                vincularTitulo: vincularTitulo,
                desvincularTitulo: desvincularTitulo,
                somaTitulos: somaTitulos ,
                updateTotal: updateTotal,
                comparaSomaValorTotal: comparaSomaValorTotal
            }

        }

        //Titulos selecionados
        var setTitulosSelecionados = function () {
            var inputs = $('#titulosAVincularLista').find('input:checkbox');
            $.each(inputs, function (input) {
                var titulo = TitulosPendentes.getTituloSelecionado($(inputs[input]).closest('tr').attr('data-rowindex'));
                var isSelected = isTituloSelected(titulo);
                var tituloExists = task.titulosSelecionados.some(ts => (ts.TituloId == titulo.TituloId) && ts.TituloId != null);
                var isRecorrenteSelected = isTituloRecorrenteSelected(titulo);
                var tituloRecorrenteExists = task.titulosSelecionados.some(ts => (ts.TituloRecorrenteId == titulo.TituloRecorrenteId) && ts.DataVencimento == titulo.DataVencimento);
                var tr = $(inputs[input]).closest('tr');

                if (!tituloExists && isSelected) {
                    $(inputs[input]).prop('disabled', true);
                }

                if (!tituloRecorrenteExists && isRecorrenteSelected) {
                    var valorInput = tr.find('input[name="Valor"]');
                    if (titulo.Valor != null) valorInput.val(Utils.moneyFormatConvert(titulo.Valor));

                    tasks.forEach(function (tsk) {
                        tsk.titulosSelecionados.forEach(function(t) {
                            if (t.TituloRecorrenteId == titulo.TituloRecorrenteId && titulo.TituloId == null && t.DataVencimento == titulo.DataVencimento) {
                                valorInput.val(Utils.moneyFormatConvert(t.Valor));
                            }
                        });
                    });

                    $(inputs[input]).prop('disabled', true);
                }

                task.titulosSelecionados.forEach(function (t) {
                    if (t.TituloId == titulo.TituloId && titulo.TituloRecorrenteId == null) {
                        $(inputs[input]).prop('checked', true);
                    }

                    if(t.TituloRecorrenteId == titulo.TituloRecorrenteId && titulo.TituloId == null && t.DataVencimento == titulo.DataVencimento){
                        var valorInput = tr.find('input[name="Valor"]');
                        valorInput.val(Utils.moneyFormatConvert(t.Valor));
                        valorInput.prop('disabled', false);
                        $(inputs[input]).prop('checked', true);
                    }

                });
            });

        }

        var vinculoBuscaDialog = $("#vinculoBuscaDialog").dialog({
            autoOpen: false,
            height: 700,
            width: 1000,
            modal: true,
            buttons: {
                Ok: {
                    text: "Vincular",
                    id: "vincular",
                    click: function() {
                        task.updateItemExtratoDOM();
                        task.isNew = false;
                        vinculoBuscaDialog.dialog("close");
                    }
                },
                Cancel: {
                    text: "Cancelar",
                    id: "Cancelar",
                    click: function(){
                        vinculoBuscaDialog.dialog("close");
                    }
                }
            },
            open: function () {
            },
            close: function () {
                $('#lista').html('');
                task = undefined;
            }
        });

        var cadastroTituloDialog = $("#cadastroTituloDialog").dialog({
            autoOpen: false,
            height: 700,
            width: 1000,
            modal: true,
            buttons: {
                Ok: {
                    text: "Gravar",
                    id: "gravar",
                    click: function() {
                        var cadastro = JSON.parse(CadastroTitulo.getData());
                        var dataVencimentoAuxiliar = cadastro.DataVencimento.split('-');
                        var dataVencimentoCompetencia = cadastro.Competencia.split('-');
                        cadastro.RowIndex = 'N' + rowIndex++;
                        cadastro.DataVencimento = dataVencimentoAuxiliar[2] + '/' + dataVencimentoAuxiliar[1] + '/' + dataVencimentoAuxiliar[0];
                        cadastro.Competencia = dataVencimentoCompetencia[2] + '/' + dataVencimentoCompetencia[1] + '/' + dataVencimentoCompetencia[0];
                        cadastro.Operacao = 'novo';
                        cadastro.Valor = cadastro.Valor == '' ? 0.00 : parseFloat(cadastro.Valor);
                        cadastro.Acrescimo = 0.0;
                        cadastro.Desconto = 0.0;
                        task.titulosIncluidos.push(cadastro);
                        task.updateItemExtratoDOM();
                        cadastroTituloDialog.dialog('close');
                    }
                },
                Cancel: {
                    text: "Cancelar",
                    id: "Cancelar",
                    click: function() {
                        cadastroTituloDialog.dialog("close");
                    }
                }
            },
            open: function () {

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("AbreCadastroTitulo")',
                    data: {
                        tipoTitulo: task.itemExtrato.Valor < 0 ? 'Pagamento' : 'Recebimento'
                    },
                    success: function(data) {
                        $('#cadastroTituloDialog > div').html(data);
                    },
                    beforeSend: function () {
                        $("#cadastroTituloDialog > div").html('<img style="margin-left: auto; margin-right: auto; display: block" src="/Content/Images/loading.gif">');
                    },
                    error: function(err){
                        console.log(err);
                    },
                    complete: Utils.verificaSessaoAjax
                });

            },
            close: function () {
                $('#cadastroTituloDialog > div').html('');
            }
        });

        var getTitulosPendentes = function() {

            var dataInicial = $('#dataInicial').val();
            var dataFinal = $('#dataFinal').val();

            var dI = dataInicial.substring(8, 10) + '/' + dataInicial.substring(5, 7) + '/' + dataInicial.substring(0, 4);
            var dF = dataFinal.substring(8, 10) + '/' + dataFinal.substring(5, 7) + '/' + dataFinal.substring(0, 4);

            $.ajax({
                type: "GET",
                data: {
                    tituloAConciliar: JSON.stringify(task.itemExtrato),
                    dataInicial: dI,
                    dataFinal: dF
                },
                url: "@Url.Action("VinculoTitulos")",
                success: function(data) {
                    $("#lista").html(data);
                    setTitulosSelecionados();
                    Utils.createMaskClass(document.querySelectorAll('#titulosAVincularLista input[name=Valor]'), 'moeda');

                    $("#titulosAVincularLista").dataTable().fnSettings().aoDrawCallback.push({
                        "fn": function(nRow) {
                            setTitulosSelecionados();
                            Utils.createMaskClass(document.querySelectorAll('#titulosAVincularLista input[name=Valor]'), 'moeda');
                        }
                    });

                },
                error: function(error) {
                    console.log(error);
                }
            });

        }

        var findTask = function(id) {
            var t;

            for (var i = 0; i < tasks.length; i++) {
                if (tasks[i].itemExtratoId == id) {
                    t = tasks[i];
                    task = t;
                }
            };

            if (!t) {
                task = new Task(id);
                tasks.push(task);
            }
        }

        var findTituloVinculo = function(titulo) {
            var titulosSelecionados = task.titulosSelecionados;

            for (var i = 0; i < titulosSelecionados.length; i++) {
                if (titulosSelecionados[i].TituloId == titulo.TituloId && titulosSelecionados[i].TituloId != null) {
                    return titulosSelecionados[i];
                }

                if (titulosSelecionados[i].TituloRecorrenteId == titulo.TituloRecorrenteId && titulosSelecionados[i].DataVencimento == titulo.DataVencimento) {
                    return titulosSelecionados[i];
                }

            }
            return titulo;
        }

        var getItemTituloSelecionado = function(e) {
            var itemAtual = TitulosPendentes.getTituloSelecionado(e.closest('tr').attr('data-rowindex'));
            var taskTitulo = findTituloVinculo(itemAtual);

            if (taskTitulo && taskTitulo.TituloId == itemAtual.TituloId) {
                return taskTitulo;
            } else {
                return itemAtual;
            }

        }

        var isTituloSelected = function(titulo) {
            for (var i = 0; i < tasks.length; i++) {
                var titulos = tasks[i].titulosSelecionados;
                
                for (var j = 0; j < titulos.length; j++) {

                    if (titulos[j].TituloId == titulo.TituloId && titulos[j].TituloId != null) {
                        return true;
                    }
                }

            }
            return false;
        }

        var isTituloRecorrenteSelected = function(tituloRecorrente) {
            for (var i = 0; i < tasks.length; i++) {
                var titulos = tasks[i].titulosSelecionados;

                for (var j = 0; j < titulos.length; j++) {

                    if ((titulos[j].TituloRecorrenteId == tituloRecorrente.TituloRecorrenteId
                            && titulos[j].TituloRecorrenteId != null)
                        && (titulos[j].DataVencimento == tituloRecorrente.DataVencimento)) {
                        return true;
                    }

                }
            }
            return false;
        }

        //Titulos Criados

        //Eventos
        $('#vinculoBuscaDialog').on('input change', 'input[name="Valor"]', function(e) {
            var titulo = getItemTituloSelecionado($(this));
            var tr = $(this).closest('tr');
            var valorInput = tr.find('input[name="Valor"]');
            if (valorInput.val() != undefined) titulo.Valor = Utils.getValue(valorInput).replace(/\,|\./g, '') / 100;
        });

        $("#vinculoBuscaDialog").on('click', 'input[type="checkbox"]', function(e) {
            var titulo = getItemTituloSelecionado($(this));
            var valorInput = $(this).closest('tr').find('input[name="Valor"]');

            if ($(this).prop('checked')) {
                valorInput.prop('disabled', false);
                titulo.Acrescimo = 0;
                titulo.Desconto = 0;
                titulo.Operacao = 'vinculo';
                titulo.RowIndex = rowIndex++;
                task.vincularTitulo(titulo);
            } else {
                valorInput.prop('disabled', true);
                task.desvincularTitulo(titulo);
            }
        });

        $('.adicionarTitulo').click(function() {
            findTask($(this).attr("data-botaoid"));
            cadastroTituloDialog.dialog('open');
        });

        $(".vincularTitulos").click(function() {
            findTask($(this).attr("data-botaoid"));
            $("#dataInicial").val(Utils.primeiroDiaMes(task.itemExtrato.DataLancamento, 'MDY'));
            $("#dataFinal").val(Utils.ultimoDiaMes(task.itemExtrato.DataLancamento, 'MDY'));
            vinculoBuscaDialog.dialog("open");
            consultarPeriodo(getTitulosPendentes);
        });

        $('#efetivar').click(function() {

            var data = [];

            tasks.forEach(function(t) {
                var temp = {
                    titulosSelecionados: t.titulosSelecionados,
                    titulosIncluidos: t.titulosIncluidos,
                    itemExtrato: t.itemExtrato
                };

                data.push(temp);
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ConciliarTitulos")',
                data: {
                    "titulosAVincular": JSON.stringify(data)
                },
                success: function(data) {
                    if (data !== '') {
                        $.notify({ message: data }, { type: 'danger' });
                    } else {
                        window.location = "../home/index";
                    }
                }
            });

        });

        $('.body-vinculo').show(function(){
            $(this).delay(1000).animate({opacity:100}, 1500);
        });

        $("#itens-validados-wraper").on('click', 'li', function() {

            $('html, body').animate({
                scrollTop: $('[data-extratoid=' + $(this).attr('data-extratolinhaid') + ']').offset().top
            }, 500);
        });

    }());

</script>


<style>
    .body-vinculo {
        font-size: 14px;
    }

    .item-vinculo {
        background-color: grey;
        border: 1px solid grey;
        box-shadow: 5px 5px 30px grey;
        margin-bottom: 20px;
    }

        .item-vinculo table {
            box-shadow: 5px 5px 10px grey ;
            font-size: 10px;
            background-color: white;
        }

            .item-vinculo table > thead {
                background-color: steelblue;
                color: white;
            }

    .item-extrato {
    }

        .item-extrato table {
            margin-top: 10px;
            background-color: white;
            border-top: 1px solid lightgrey;
            border-bottom: 1px solid lightgrey;
            border-left: 1px solid lightgrey;
            border-right: 1px solid lightgrey;
            box-shadow: 5px 5px 30px grey;
        }

    .item-display {
    }

    #alerta {
        margin-left: 30%;
    }

    #valorSomatoria {
        font-size: 14px;
        font-weight: bold;
    }

    #titulosAVincularLista {
    }

        #titulosAVincularLista  td:nth-child(3) {
            width: 10%;
        }

    #painel-periodo {
        font-size: 12px;
    }

    #item-nao-validados a {
        cursor: pointer;
    }


</style>
