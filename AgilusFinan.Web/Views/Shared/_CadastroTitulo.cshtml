@using AgilusFinan.Domain.Entities
@using AgilusFinan.Web.ViewModels
@model TituloViewModel

<div class="_CadastroTitulo">
    <div class="form-group">
        @Html.LabelFor(model => model.ContaId, "ContaId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ContaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataVencimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CategoriaId, "CategoriaId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select name="CategoriaId" id="CategoriaId" class="form-control">
                @{var ListaCategorias = AgilusFinan.Web.Bases.Util.CategoriasIdentadas(Model.TipoTitulo == "Pagamento" ? DirecaoCategoria.Pagamento : DirecaoCategoria.Recebimento);}
                @Html.Partial("~/Views/Categoria/_ItensCategoria.cshtml", new ItensCategoria() {Id = Model.CategoriaId, Lista = ListaCategorias})
            </select>
            @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PessoaId, "PessoaId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PessoaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PessoaId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CentroCustoId, "CentroCustoId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CentroCustoId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CentroCustoId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Competencia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Competencia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Competencia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Observacao, null, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"@*, @maxlength = "500"*@ }
           })
            @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<script>

    $('#Competencia').val($('#Competencia').val().substring(3, 10));
    $('#Competencia').removeClass('inputdate');

    $('#Competencia').datepicker({
        forceParse: true,
        autoclose: true,
        language: 'pt-BR',
        format: 'mm/yyyy',
        clearBtn: true,
        minViewMode: 1
    });

    Utils.createMask(document.getElementById('Competencia'), '00/0000');


    var CadastroTitulo = function () {
        Utils.createMask(document.getElementById("Valor"), "moeda");
        var contaPadrao = $('#ContaId').val();

        var resetForm = function () {
            $('#ContaId').val(contaPadrao);
            $('#DataVencimento').val('');
            $('#Descricao').val('');
            $('#Valor').val('');
            $('#CategoriaId').val('');
            $('#PessoaId').val('');
            $('#CentroCustoId').val('');
            $('#Competencia').val('');
            $('#Observacao').val('');
        }

        var setForm = function (titulo) {
            $('#ContaId').val(titulo.ContaId);
            $('#DataVencimento').val(titulo.DataVencimento);
            $('#Descricao').val(titulo.Descricao);
            $('#Valor').val(titulo.Valor);
            $('#CategoriaId').val(titulo.CategoriaId);
            $('#PessoaId').val(titulo.PessoaId);
            $('#CentroCustoId').val(titulo.CentroCustoId);
            $('#Competencia').val(titulo.Competencia);
            $('#Observacao').val(titulo.Observacao);
        }

        var getData = function () {
            var titulo = {};
            titulo.Id = $('#Id').val();
            titulo.TituloRecorrenteId = $('#TituloRecorrenteId').val();
            titulo.ContaId = $('#ContaId').val();
            titulo.NomeConta = $('#ContaId').get(0).options[$('#ContaId').get(0).selectedIndex].innerHTML;
            titulo.DataVencimento = Utils.convertFormatDate($('#DataVencimento').val() == '' ? '2015-01-01' : $('#DataVencimento').val());
            titulo.Descricao = $('#Descricao').val();
            titulo.Valor = $('#Valor').val().replace(/\./g, '').replace(",", ".");
            titulo.CategoriaId = $('#CategoriaId').val();
            titulo.NomeCategoria = $('#CategoriaId').get(0).options[$('#CategoriaId').get(0).selectedIndex].innerHTML;
            titulo.PessoaId = $('#PessoaId').val();
            titulo.NomePessoa = $('#PessoaId').get(0).options[$('#PessoaId').get(0).selectedIndex].innerHTML;
            titulo.CentroCustoId = $('#CentroCustoId').val();
            titulo.CentroCustoNome = $('#CentroCustoId').get(0).options[$('#CentroCustoId').get(0).selectedIndex].innerHTML;
            titulo.Competencia = Utils.convertFormatDate($('#Competencia').val() == '' ? '2015-01-01' : $('#Competencia').val());
            titulo.Observacao = $('#Observacao').val();

            var estaPago = document.getElementById('estapago');

            if (estaPago) {
                if (estaPago.checked) {
                    titulo.Liquidacoes = tabLiquidacoes.data;
                }
            }
            return JSON.stringify(titulo);
        }

        return {
            getData: getData,
            resetForm: resetForm
        }
    }();

</script>