@model IEnumerable<AgilusFinan.Domain.Entities.Pessoa>

@{
    ViewBag.Title = "Pessoas";
}
<div class="ibox animated fadeInRight">
    <div class="ibox-title">
        <h2>Pessoas</h2>
    </div>
    <div class="ibox-content">

        <br />

        <p>
            <a href="@Url.Action("Create")" class="btn btn-primary btn-outline"><i class="fa fa-plus"></i><span> Incluir</span></a>
        </p>

        <br />
        <table class="table" id="sorted">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Nome)
                    </th>
                    <th>
                        Tipo
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Cpf)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Rg)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DataNascimento)
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nome)
                        </td>

                        <td>
                            @{
                    string s = String.Empty;
                    int c = 1;

                    foreach (var tp in item.TiposPessoa)
                    {
                        s += tp.TipoPessoa.Nome;

                        if (item.TiposPessoa.Count > c)
                        {
                            s += ", ";
                        }
                        c++;
                    }
                    @Html.DisplayFor(modelItem => s)
                            }
                        </td>
                        <td class="Cpf">
                            @Html.DisplayFor(modelItem => item.Cpf)
                        </td>
                        <td class="Rg">
                            @Html.DisplayFor(modelItem => item.Rg)
                        </td>
                        <td>
                            @{
                    if (!String.IsNullOrEmpty(item.DataNascimento.ToString()))
                    {
                        DateTime dataNasc = (DateTime)item.DataNascimento;
                        @Html.DisplayFor(modelItem => dataNasc.GetDateTimeFormats()[0])}
                            }
                        </td>
                        <td>
                            @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-circle dim fa fa-edit", @title = "Alterar" })
                            <button class="btn btn-warning btn-circle" title="Excluir" onclick="Excluir((@item.Id), this)"><i class="dim fa fa-trash-o"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    (function () {
        Utils.createMaskClass(document.getElementsByClassName("Cpf"), "cpf");
        Utils.createMaskClass(document.getElementsByClassName("Rg"), "rg");
    })();
    Utils.initializeDataTables('#sorted');
</script>
