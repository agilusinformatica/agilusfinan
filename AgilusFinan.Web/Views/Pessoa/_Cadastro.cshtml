@model AgilusFinan.Web.ViewModels.PessoaViewModel

<style>
    textarea:focus, input:focus{
        outline: 0;
    }
</style>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pessoa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContaBancaria, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ContaBancaria, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TiposPorPessoa, htmlAttributes: new {@class = "control-label col-md-2"})
            <table id="tabTiposPessoa">
                <tr>
                    @foreach (var tipo in Model.TiposPorPessoa)
                    {
                        <td>
                            @Html.LabelFor(model => model.TiposPorPessoa, tipo.Nome, htmlAttributes: new {@class = "control-label col-md-1"})
                            <input type="hidden" value="@(tipo.Id)" />
                            <input class="form-control" type="checkbox" @(tipo.Marcado ? "checked" : "")/>
                        </td>
                    }
                </tr>
            </table>
        </div>

        <input class="btn btn-default" id="AdicionarTelefone" type="button" value="Adiciona Telefone"/>

        <table class="table" id="tabTelefones">
        </table>

                
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-default" onclick="UpdatePessoa();">Gravar</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/HelloTable.js"></script>

<script>
    var tabTelefones = new HelloTable('tabTelefones', 'AdicionarTelefone');
    var tipos = JSON.parse('@Html.Raw(Json.Encode(ViewBag.ListaTiposTelefone))');
    var elementos = [];
    for (var i = 0; i < tipos.length; i++) {
        elementos.push(new SelectElement(tipos[i].Id, tipos[i].Nome));
    }
    tabTelefones.Columns.push(new ColumnTable('DDD', 'Ddd', ColumnType.text));
    tabTelefones.Columns.push(new ColumnTable('Número', 'Numero', ColumnType.text));
    tabTelefones.Columns.push(new ColumnTable('Tipo', 'TipoTelefoneId', ColumnType.list, elementos));

    tabTelefones.jsonData = '@Html.Raw(Json.Encode(Model.Telefones))';

    function UpdatePessoa() {
        var pessoaJson = GetData();
        $.ajax({
            type: "POST",
            url: '/Pessoa/Create',
            data: { "pessoa": pessoaJson }
        });
    }
    function GetData() {
        var pessoa = {};
            
        pessoa.Telefones = [{}];
        pessoa.Nome = $('#Nome').val();
        pessoa.Cpf = $('#Cpf').val();
        pessoa.Rg = $('#Rg').val();
        pessoa.DataNascimento = $('#DataNascimento').val();

        pessoa.Endereco = {};
        pessoa.Endereco.Logradouro = $('#Endereco_Logradouro').val();
        pessoa.Endereco.Numero = $('#Endereco_Numero').val();
        pessoa.Endereco.Complemento = $('#Endereco_Complemento').val();
        pessoa.Endereco.Bairro = $('#Endereco_Bairro').val();
        pessoa.Endereco.Cidade = $('#Endereco_Cidade').val();
        pessoa.Endereco.Uf = $('#Endereco_Uf').val();
        pessoa.Endereco.Cep = $('#Endereco_Cep').val();

        pessoa.ContaBancaria = {};
        pessoa.ContaBancaria.BancoId = $('#Endereco_BancoId').val();
        pessoa.ContaBancaria.Agencia = $('#Endereco_Agencia').val();
        pessoa.ContaBancaria.Numero = $('#Endereco_Numero').val();
        pessoa.ContaBancaria.Poupanca = $('#Endereco_Poupanca').val();
        pessoa.ContaBancaria.NomeTitular = $('#Endereco_NomeTitular').val();
        pessoa.ContaBancaria.CpfTitular = $('#Endereco_CpfTitular').val();

        pessoa.TiposPorPessoa = [{}];

        var tab = document.getElementById('tabTiposPessoa');
        for (var i = 0, cell; cell = tab.rows[0].cells[i]; i++) {
            var TipoPorPessoa = {};
            TipoPorPessoa.Id = cell.getElementsByTagName('input')[0].value;
            TipoPorPessoa.Marcado = cell.getElementsByTagName('input')[1].checked;
            pessoa.TiposPorPessoa[i] = TipoPorPessoa;
        }

        /*var telefone = {};
        telefone.Ddd = $('#ddd1').val();
        telefone.Numero = $('#numero1').val();
        pessoa.Telefones[0] = telefone;
        var telefone = {};
        telefone.Ddd = $('#ddd2').val();
        telefone.Numero = $('#numero2').val();
        pessoa.Telefones[1] = telefone;
        var telefone = {};
        telefone.Ddd = $('#ddd3').val();
        telefone.Numero = $('#numero3').val();
        pessoa.Telefones[2] = telefone;*/

        return JSON.stringify(pessoa);
    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




