@model AgilusFinan.Domain.Entities.Empresa

@{
    ViewBag.Title = "Criar";
    Layout = "~/Views/Shared/_LayoutOff.cshtml";
}



    <div class="row wrapper wrapper-content animated fadeInRight">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-title">
                <h2>Novo Cadastro</h2>
            </div>
            <div class="ibox-content">
                <h2>Cadastre-se</h2>
                <p>Bem-vindo ao Agilus Finan. Informe seus dados para usufruir do sistema.</p>

                <form action="/Empresa/Create" method="post" class="wizard-big" id="form" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <h1>Conta</h1>
                    <fieldset>
                        <div class="row">
                            <div class="col-lg-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <label class="control-label">CPF / CNPJ</label>
                                    @Html.EditorFor(model => model.CpfCnpj, new { htmlAttributes = new { @class = "form-control" } })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label class="control-label">E-mail de Contato</label>
                                    <div class="input-group">
                                        <span class="input-group-addon" id="basic-addon1">@@</span>
                                        @Html.EditorFor(model => model.EmailContato, new { htmlAttributes = new { @class = "form-control", aria_describedby = "basic-addon1" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EmailContato, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label class="control-label">E-mail Financeiro</label>
                                    <div class="input-group">
                                        <span class="input-group-addon" id="basic-addon2">@@</span>
                                        @Html.EditorFor(model => model.EmailFinanceiro, new { htmlAttributes = new { @class = "form-control", aria_describedby = "basic-addon2" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.EmailFinanceiro, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Logotipo</label>
                                    <input type="file" name="file" id="file" />
                                    @Html.HiddenFor(model => model.Logotipo)
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div class="text-center">
                                    <div style="margin-top: 100px">
                                        <i class="fa fa-sign-in" style="font-size: 180px; color: #e5e5e5"></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    <h1>Endereço</h1>
                    <fieldset>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="text-center">
                                    <div style="margin-top: 130px">
                                        <i class="fa fa-home" style="font-size: 180px; color: #e5e5e5"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                    <h1>Finalizando</h1>
                    <fieldset>
                        <h2>Termos e Condições</h2>
                        <input id="acceptTerms" name="acceptTerms" type="checkbox" class="required"> <label for="acceptTerms">Eu concordo com os termos e condições.</label>
                    </fieldset>
                </form>


            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/wizardStepsStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/wizardSteps")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/validate")
}
<script src="~/Scripts/bootstrap-filestyle.min.js"></script>
<script src="~/Scripts/plugins/exif/exif.js"></script>

<script>

    $(document).ready(function () {

        $("#form").steps({
            bodyTag: "fieldset",
            transitionEffect: "slideLeft",
            enableAllSteps: true,

            labels: {
                cancel: "Cancelar",
                current: "Próximo Passo:",
                pagination: "Pagina",
                finish: "Finalizar",
                next: "Próximo",
                previous: "Anterior",
                loading: "Carregando..."
            },

            onStepChanging: function (event, currentIndex, newIndex) {
                // Always allow going backward even if the current step contains invalid fields!
                if (currentIndex > newIndex) {
                    return true;
                }

                // Forbid suppressing "Warning" step if the user is to young
                if (newIndex === 3 && Number($("#age").val()) < 18) {
                    return false;
                }

                var form = $(this);

                // Clean up if user went backward before
                if (currentIndex < newIndex) {
                    // To remove error styles
                    $(".body:eq(" + newIndex + ") label.error", form).remove();
                    $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
                }

                // Disable validation on fields that are disabled or hidden.
                form.validate().settings.ignore = ":disabled,:hidden";

                // Start validation; Prevent going forward if false
                return form.valid();
            },
            onStepChanged: function (event, currentIndex, priorIndex) {
                // Suppress (skip) "Warning" step if the user is old enough.
                if (currentIndex === 2 && Number($("#age").val()) >= 18) {
                    $(this).steps("next");
                }

                // Suppress (skip) "Warning" step if the user is old enough and wants to the previous step.
                if (currentIndex === 2 && priorIndex === 3) {
                    $(this).steps("previous");
                }
            },
            onFinishing: function (event, currentIndex) {
                var form = $(this);

                // Disable validation on fields that are disabled.
                // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                form.validate().settings.ignore = ":disabled";

                // Start validation; Prevent form submission if false
                return form.valid();
            },
            onFinished: function (event, currentIndex) {
                var form = $(this);

                // Submit form input
                form.submit();
            }
        }).validate({
            errorPlacement: function (error, element) {
                element.before(error);
            },
            rules: {
                confirm: {
                    equalTo: "#password"
                }
            }
        });

        Utils.createMask(document.getElementById('CpfCnpj'), "cpf");
        
        $(":file").filestyle({
            buttonName: "btn-primary",
            buttonText: "Procurar",
            placeholder: "Sem Arquivo",
        });

    });
</script>

