@model System.Collections.Generic.List<AgilusFinan.Domain.Entities.TituloPendente>

<table id="titulosAVincularLista">
    @foreach (var titulo in Model)
    {
        <tr data-tituloid=@titulo.TituloId>
            <td><input type="checkbox" name="vinculoCheckbox" /></td>
            <td name="TituloId">@titulo.TituloId</td>
            <td name="TituloRecorrenteId">@titulo.TituloRecorrenteId</td>
            <td name="Descricao">@titulo.Descricao</td>

            @*<td>@titulo.Valor</td>*@

            @if (titulo.Valor == null)
            {
                <td> R$ <input style="width:50px"type="text" name="Valor" disabled="disabled" value="0,00" /> </td>
            }
            else
            {
                <td name="Valor">@(((decimal)titulo.Valor).ToString("C"))</td>
            }

            <td name="Direcao">@titulo.Direcao</td>
            <td name="CategoriaId">@titulo.CategoriaId</td>
            <td name="DataVencimento">@titulo.DataVencimento.Date.ToShortDateString()</td>
            <td name ="PessoaId">@titulo.PessoaId</td>
            <td name="ContaId">@titulo.ContaId</td>

        </tr>
    }
</table>
<input class="btn btn-default modal" value="Vincular" />


<style>


</style>

<script>

    var TitulosPendentes = function () {
        var titulosPendentes = JSON.parse('@Html.Raw(Json.Encode(Model))');

        Utils.createMask($('input[name=Valor]').get(0), 'moeda');

        var getTituloSelecionado = function (index) {
            //Conversão do formato da data antes do retorno.
            var regex = new RegExp(/\/Date\(\d{13}\)\//); //Regex que verifica se data esta no formato /Date(1450231200000)/
            if (regex.exec(titulosPendentes[index].DataVencimento)) {
                titulosPendentes[index].DataVencimento = Utils.convertJSONDate(titulosPendentes[index].DataVencimento, 'DMY');
            }

            return titulosPendentes[index];
        };

        var getData = function () {
            return JSON.parse('@Html.Raw(Json.Encode(Model))');
        }

        

        return {
            titulosPendentes: titulosPendentes,
            getTituloSelecionado: getTituloSelecionado
        }

    }();


</script>