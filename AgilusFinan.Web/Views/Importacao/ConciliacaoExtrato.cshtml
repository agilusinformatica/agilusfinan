@{
    ViewBag.Title = "Vinculo de Titulos";
}

@using AgilusFinan.Domain.Entities
@using AgilusFinan.Web.Bases
@using AgilusFinan.Web.ViewModels
@model List<ConciliacaoExtrato>
<h2>Vinculo Extrato/Titulos</h2>

@{
    var extratoId = 0;
}

<div id="vinculoBuscaDialog" class="dialog" style="display:none" title="Vincular títulos">
    <div id="painel-periodo">
        @Html.Partial("_PainelPeriodo")
        <hr />
        <div id="lista"></div>
    </div>
</div>

<div id="cadastroTituloDialog" class="dialog" style="display: none" title="Cadastrar título">
    <div class="form-horizontal">
        @*@Html.Partial("_CadastroTitulo", new TituloViewModel() { TipoTitulo = "Recebimento" })*@
    </div>
</div>

<div class="container">

    <div class="row">
        <div class="col-md-4">
            <button class="btn btn-default" id="efetivar">Efetivar</button>
        </div>
    </div>
    <hr />
    <div class="item-vinculo" style="display:none;opacity:0">
        @foreach (var vinculo in Model)
        {
            <div class="row">
                <div class="col-md-10">
                    <div class="list-group item-extrato" data-extratoid=@extratoId>
                        <table class="extrato-table">
                            <thead>
                            <tr>
                                <th style="display:none">ID</th>
                                <th>Data Lancamento</th>
                                <th>Descricao</th>
                                <th>Valor</th>
                                <th>Tipo de lançamento</th>
                            </tr>
                            </thead>

                            <tbody>
                            <tr>
                                <td style="display:none">@vinculo.Id</td>
                                <td>@vinculo.DataLancamento.Date.ToShortDateString()</td>
                                <td>@vinculo.Descricao</td>
                                <td>@vinculo.Valor</td>
                                <td>@vinculo.TipoLancamento</td>
                            </tr>
                            </tbody>
                        </table>
                        <hr />

                        <div class="row">
                            <div class="col-md-12">
                                <p>Total: <span id="valorSomatoria">0.00</span></p>
                                <table class="table" id="titulosVinculados">
                                    <thead>
                                        <tr>
                                            <th style="display:none">RowId</th>
                                            <th style="display:none">ID</th>
                                            <th style="display:none"> Titulo Recorrente</th>
                                            <th>Operação</th>
                                            <th>Conta</th>
                                            <th>Data de vencimento</th>
                                            <th>Descrição</th>
                                            <th>Valor</th>
                                            <th>Categoria</th>
                                            <th>Pessoa</th>
                                            <th>Acréscimos</th>
                                            <th>Descontos</th>
                                            <th></th>
                                        </tr>
                                    </thead>

                                </table>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-1 col-sm-offset-1">
                                <button class="btn btn-default vincularTitulos" data-botaoid=@extratoId>Buscar</button> <br />

                            </div>
                            <div class="col-sm-1 ">
                                <button class="btn btn-default adicionarTitulo" data-botaoid=@extratoId>Adicionar</button> <br />

                            </div>
                        </div>
                    </div>
                    @{
            extratoId = extratoId + 1;
                    }
                </div>
            </div>

        }
    </div>
</div>

<script>
    var conciliacaoExtratoController = (function () {
        //objeto extrato
        var convertDate = function (date) {
            var dia = date.substring(0, 2);
            var mes = date.substring(3, 5);
            var ano = date.substring(6, 10);

            return mes + "/" + dia + "/" + ano;
        };

        var ItemExtratoDOM = function(element) {
            this.element = element;

            var setTitulosVinculados = function (titulos, operacao) {
                var tableVinculo = this.element.find("#titulosVinculados");

                for (var i = 0; i < titulos.length; i++) {
                    var tr = document.createElement('tr');
                    var titulo = titulos[i];

                    titulo.Operacao = operacao;
                    tr.innerHTML =
                        '<td style="display: none;">' + titulo.RowIndex + '</td>' +
                         '<td style="display: none;">' + titulo.TituloId + '</td>' +
                        '<td style="display: none;">' + titulo.TituloRecorrenteId + '</td>' +
                        '<td>' + titulo.Operacao + '</td>' +
                        '<td>' + titulo.NomeConta + '</td>' +
                        '<td>' + titulo.DataVencimento + '</td>' +
                        '<td>' + titulo.Descricao + '</td>' +
                        '<td>' + Utils.moneyFormatConvert(titulo.Valor.toFixed(2)) + '</td>' +
                        '<td>' + titulo.NomeCategoria + '</td>' +
                        '<td>' + titulo.NomePessoa + '</td>' +
                        '<td><input type="text" name="Acrescimo" value=' + titulo.Acrescimo.toFixed(2) + ' "></td>' +
                        '<td><input type="text" name="Desconto" value=' + titulo.Desconto.toFixed(2) + ' "></td>' +
                        '<td><input type="button" value="Excluir" name="Excluir"></td>';

                    tableVinculo.append(tr);
                    Utils.createMask($(tr).find('input[name="Acrescimo"]').get(0), 'moeda');
                    Utils.createMask($(tr).find('input[name="Desconto"]').get(0), 'moeda');

                }
            }

            var getItemExtrato = function() {
                var itemExtrato = {};
                var extratoColunas = this.element.find("table > tbody > tr > td");
                itemExtrato.Id = extratoColunas[0].innerHTML;
                itemExtrato.DataLancamento = convertDate(extratoColunas[1].innerHTML).substring(0, 10);
                itemExtrato.Descricao = extratoColunas[2].innerHTML;
                itemExtrato.Valor = parseFloat(extratoColunas[3].innerHTML.replace(",", "."));
                itemExtrato.TipoLancamento = extratoColunas[4].innerHTML;
                return itemExtrato;
            };

            var clear = function() {
                this.element.find('#titulosVinculados > tbody > tr').remove();
                this.element.find('#titulosCriar > tbody > tr').remove();
            };

            return {
                element: this.element,
                getItemExtrato: getItemExtrato,
                clear: clear,
                setTitulosVinculados: setTitulosVinculados
            }
        };

        var Task = function (id) {
            this.itemExtratoId = id;
            this.itemExtratoDOM = new ItemExtratoDOM($('[data-extratoId=' + id + ']'));
            this.itemExtrato = this.itemExtratoDOM.getItemExtrato();
            this.element = this.itemExtratoDOM.element;
            this.isNew = true;
            this.titulosSelecionados = [];
            this.titulosIncluidos = [];
            this.ignorar = false;
            this.selecionado = false;
            var that = this;
            var total = 0;

            var vincularTitulo = function(titulo) {
                this.titulosSelecionados.push(titulo);
            };

            var desvincularTitulo = function(titulo) {
                this.titulosSelecionados.forEach(function(t, index, titulos) {

                    if (titulo.RowIndex == t.RowIndex) {
                        titulos.splice(index, 1);
                    }
                });
            };

            var findTitulo = function(element) {
                var titulo;
                var rowIndex = element.closest('tr').children()[0].innerHTML;

                for (var i = 0; i < that.titulosSelecionados.length; i++) {
                    if (that.titulosSelecionados[i].RowIndex == rowIndex) {
                        titulo = that.titulosSelecionados[i];
                    }
                }

                for (var i = 0; i < that.titulosIncluidos.length; i++) {
                    if (that.titulosIncluidos[i].RowIndex == rowIndex) {
                        titulo = that.titulosIncluidos[i];
                    }
                }


                return titulo;
            }

            //Mudança de contexto 'this' para o objeto input pertecente a esta Task.
            this.element.on('input change', 'input[name="Acrescimo"]', function() {
                var titulo = findTitulo($(this));
                titulo.Acrescimo = $(this).val().replace(/\,|\./g, '') / 100;
                updateTotal.call(that);
            });

            this.element.on('input change', 'input[name="Desconto"]', function() {
                var titulo = findTitulo($(this));
                titulo.Desconto = $(this).val().replace(/\,|\./g, '') / 100;
                updateTotal.call(that);
            });

            this.element.on('click', 'input[name="Excluir"]', function() {
                var tableId = $(this).closest('table').attr('id');
                var titulo = findTitulo($(this));

                switch(titulo.Operacao) {

                    case 'novo':
                        that.titulosIncluidos.forEach(function(t, index, titulos) {
                            if (titulo.RowIndex == t.RowIndex) {
                                titulos.splice(index, 1);
                            }
                        });
                        break;

                    case 'vinculo':
                        desvincularTitulo.call(that, titulo);
                        break;
                }

                updateItemExtratoDOM.call(that);
            });

            var somaTitulos = function() {
                var soma = 0;
                if (this.titulosSelecionados) {
                    this.titulosSelecionados.forEach(function(titulo) {
                        soma += (titulo.Valor + parseFloat((titulo.Acrescimo ? titulo.Acrescimo : 0)) - parseFloat((titulo.Desconto ? titulo.Desconto : 0)));
                    });

                    this.titulosIncluidos.forEach(function(titulo) {
                        soma += (titulo.Valor + parseFloat((titulo.Acrescimo ? titulo.Acrescimo : 0)) - parseFloat((titulo.Desconto ? titulo.Desconto : 0)));
                    });

                    return soma;
                } else {
                    return 0;
                }
            };

            var updateTotal = function() {
                total = somaTitulos.call(that);
                that.element.find('#valorSomatoria').html(total.toFixed(2));

                if (Math.round(total) != Math.round(Math.abs(that.itemExtrato.Valor))) {
                    that.element.find('#valorSomatoria').css('color', 'red');

                } else {
                    that.element.find('#valorSomatoria').css('color', 'green');
                }
            }

            var updateItemExtratoDOM = function() {
                this.itemExtratoDOM.clear();
                updateTotal.call(this);
                this.itemExtratoDOM.setTitulosVinculados(this.titulosSelecionados, 'vinculo');
                this.itemExtratoDOM.setTitulosVinculados(this.titulosIncluidos, 'novo');
            };

            return {
                itemExtratoId: this.itemExtratoId,
                itemExtrato: this.itemExtrato,
                itemExtratoDOM: this.itemExtratoDOM,
                updateItemExtratoDOM: updateItemExtratoDOM,
                extratoElement: this.extratoElement,
                selectionado: this.selecionado,
                isNew: this.isNew,
                titulosSelecionados: this.titulosSelecionados,
                titulosIncluidos: this.titulosIncluidos,
                vincularTitulo: vincularTitulo,
                desvincularTitulo: desvincularTitulo,
                somaTitulos: somaTitulos ,
                updateTotal: updateTotal
            }

        }

        //variaveis
        var tasks =[];
        var task;
        var rowIndex = 0;

        //Titulos selecionados
        var setTitulosSelecionados = function () {
            var inputs = $('#titulosAVincularLista').find('input:checkbox');
            $.each(inputs, function (input) {
                var titulo = TitulosPendentes.getTituloSelecionado($(inputs[input]).closest('tr').attr('data-rowindex'));
                var isSelected = isTituloSelected(titulo);
                var tituloExists = task.titulosSelecionados.some(ts => (ts.TituloId == titulo.TituloId) && ts.TituloId != null);
                var isRecorrenteSelected = isTituloRecorrenteSelected(titulo);
                var tituloRecorrenteExists = task.titulosSelecionados.some(ts => (ts.TituloRecorrenteId == titulo.TituloRecorrenteId) && ts.DataVencimento == titulo.DataVencimento);
                var tr = $(inputs[input]).closest('tr');

                if (!tituloExists && isSelected) {
                    $(inputs[input]).prop('disabled', true);
                }

                if (!tituloRecorrenteExists && isRecorrenteSelected) {
                    var valorInput = tr.find('input[name="Valor"]');
                    if (titulo.Valor != null) valorInput.val(Utils.moneyFormatConvert(titulo.Valor));
                    $(inputs[input]).prop('disabled', true);
                }

                task.titulosSelecionados.forEach(function (t) {
                    if (t.TituloId == titulo.TituloId && titulo.TituloRecorrenteId == null) {
                        $(inputs[input]).prop('checked', true);
                    }

                    if(t.TituloRecorrenteId == titulo.TituloRecorrenteId && titulo.TituloId == null && t.DataVencimento == titulo.DataVencimento){
                        var valorInput = tr.find('input[name="Valor"]');
                        valorInput.val(Utils.moneyFormatConvert(t.Valor));
                        valorInput.prop('disabled', false);
                        $(inputs[input]).prop('checked', true);
                    }

                });
            });

        }

        var vinculoBuscaDialog = $("#vinculoBuscaDialog").dialog({
            autoOpen: false,
            height: 700,
            width: 1000,
            modal: true,
            buttons: {
                Ok: {
                    text: "Vincular",
                    id: "vincular",
                    click: function() {
                        task.updateItemExtratoDOM();
                        task.isNew = false;
                        vinculoBuscaDialog.dialog("close");
                    }
                },
                Cancel: {
                    text: "Cancelar",
                    id: "Cancelar",
                    click: function(){
                        vinculoBuscaDialog.dialog("close");
                    }
                }
            },
            open: function () {
            },
            close: function () {
                $('#lista').html('');
            }
        });

        var cadastroTituloDialog = $("#cadastroTituloDialog").dialog({
            autoOpen: false,
            height: 700,
            width: 1000,
            modal: true,
            buttons: {
                Ok: {
                    text: "Gravar",
                    id: "gravar",
                    click: function() {
                        var cadastro = JSON.parse(CadastroTitulo.getData());
                        var dataVencimentoAuxiliar = cadastro.DataVencimento.split('-');
                        var dataVencimentoCompetencia = cadastro.Competencia.split('-');
                        cadastro.RowIndex = 'N' + rowIndex++;
                        cadastro.DataVencimento = dataVencimentoAuxiliar[2] + '/' + dataVencimentoAuxiliar[1] + '/' + dataVencimentoAuxiliar[0];
                        cadastro.Competencia = dataVencimentoCompetencia[2] + '/' + dataVencimentoCompetencia[1] + '/' + dataVencimentoCompetencia[0];

                        cadastro.Valor = cadastro.Valor == '' ? 0.00 : parseFloat(cadastro.Valor);
                        cadastro.Acrescimo = 0.0;
                        cadastro.Desconto = 0.0;
                        task.titulosIncluidos.push(cadastro);
                        task.updateItemExtratoDOM();
                        cadastroTituloDialog.dialog('close');
                    }
                },
                Cancel: {
                    text: "Cancelar",
                    id: "Cancelar",
                    click: function() {
                        cadastroTituloDialog.dialog("close");
                    }
                }
            },
            open: function () {

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("AbreCadastroTitulo")',
                    data: {
                        tipoTitulo: task.itemExtrato.Valor < 0 ? 'Pagamento' : 'Recebimento'
                    },
                    success: function(data) {
                        $('#cadastroTituloDialog > div').html(data);
                    },
                    beforeSend: function () {
                        $("#cadastroTituloDialog > div").html('<img style="margin-left: auto; margin-right: auto; display: block" src="/Content/Images/loading.gif">');
                    },
                    error: function(err){
                        console.log(err);
                    }
                });

            },
            close: function () {
                $('#cadastroTituloDialog > div').html('');
            }
        });

        var getTitulosPendentes = function() {

            var dataInicial = $('#dataInicial').val();
            var dataFinal = $('#dataFinal').val();

            var dI = dataInicial.substring(8, 10) + '/' + dataInicial.substring(5, 7) + '/' + dataInicial.substring(0, 4);
            var dF = dataFinal.substring(8, 10) + '/' + dataFinal.substring(5, 7) + '/' + dataFinal.substring(0, 4);

            $.ajax({
                type: "GET",
                data: {
                    tituloAConciliar: JSON.stringify(task.itemExtrato),
                    dataInicial: dI,
                    dataFinal: dF
                },
                url: "@Url.Action("VinculoTitulos")",
                success: function (data) {
                    $("#lista").html(data);
                    setTitulosSelecionados();
                    Utils.createMaskClass(document.querySelectorAll('#titulosAVincularLista input[name=Valor]'), 'moeda');


                    $('#titulosAVincularLista').on('draw.dt', function () {
                        setTitulosSelecionados();
                        Utils.createMaskClass(document.querySelectorAll('#titulosAVincularLista input[name=Valor]'), 'moeda');
                        $('#titulosAVincularLista').off('draw.dt');
                    });

                },
                error: function(error) {
                    console.log(error);
                }
            });

        }

        var findTask = function (id) {
            var t;

            for (var i = 0; i < tasks.length; i++) {
                if (tasks[i].itemExtratoId == id) {
                    t = tasks[i];
                    task = t;
                }
            };

            if(!t) {
                task = new Task(id);
                tasks.push(task);
            }

        }

        var findTituloVinculo = function(titulo){
            var titulosSelecionados = task.titulosSelecionados;

            for(var i = 0; i < titulosSelecionados.length; i++){
                if(titulosSelecionados[i].TituloId == titulo.TituloId && titulosSelecionados[i].TituloId != null){
                    return titulosSelecionados[i];
                }

                if(titulosSelecionados[i].TituloRecorrenteId == titulo.TituloRecorrenteId && titulosSelecionados[i].DataVencimento == titulo.DataVencimento) {
                    return titulosSelecionados[i];
                }

            }
            return titulo;
        }

        var getItemTituloSelecionado = function(e){
            //var itemAtual = TitulosPendentes.getTituloSelecionado(e.closest('tr').find('td[name="rowIndex"]').html());
            //var itemAtual = TitulosPendentes.getTituloSelecionado(e.closest('tr').data('rowIndex'));
            var itemAtual = TitulosPendentes.getTituloSelecionado(e.closest('tr').attr('data-rowindex'));
            var taskTitulo = findTituloVinculo(itemAtual);

            if(taskTitulo && taskTitulo.TituloId == itemAtual.TituloId){
                return taskTitulo;
            }else{
                return itemAtual;
            }

        }

        var isTituloSelected = function(titulo){
            for(var i = 0; i < tasks.length; i++){
                var titulos = tasks[i].titulosSelecionados;
                for(var j = 0; j < titulos.length; j++){

                    if(titulos[j].TituloId == titulo.TituloId && titulos[j].TituloId != null){
                        return true;
                    }
                }
            }
            return false;
        }

        var isTituloRecorrenteSelected = function(tituloRecorrente){
            for(var i = 0; i < tasks.length; i++){
                var titulos = tasks[i].titulosSelecionados;

                for(var j = 0; j < titulos.length; j++){

                    if((titulos[j].TituloRecorrenteId == tituloRecorrente.TituloRecorrenteId
                            && titulos[j].TituloRecorrenteId != null)
                        && (titulos[j].DataVencimento == tituloRecorrente.DataVencimento)){
                        return true;
                    }

                }
            }
            return false;
        }

        //Titulos Criados

        //Eventos
        $('#vinculoBuscaDialog').on('input change', 'input[name="Valor"]', function(e){
            var titulo = getItemTituloSelecionado($(this));
            var tr =  $(this).closest('tr');
            var valorInput = tr.find('input[name="Valor"]');
            if (valorInput.val() != undefined) titulo.Valor = Utils.getValue(valorInput).replace(/\,|\./g, '') / 100;
        });

        $("#vinculoBuscaDialog").on('click', 'input[type="checkbox"]', function (e) {
            var titulo = getItemTituloSelecionado($(this));
            var valorInput = $(this).closest('tr').find('input[name="Valor"]');

            if ($(this).prop('checked')) {
                valorInput.prop('disabled', false);
                titulo.Acrescimo = 0;
                titulo.Desconto = 0;
                titulo.Operacao = 'vinculo';
                titulo.RowIndex = rowIndex++;
                task.vincularTitulo(titulo);
            } else {
                valorInput.prop('disabled', true);
                task.desvincularTitulo(titulo);
            }
        });

        $('.adicionarTitulo').click(function(){
            findTask($(this).attr("data-botaoid"));
            cadastroTituloDialog.dialog('open');
        });

        $(".vincularTitulos").click(function () {
            findTask($(this).attr("data-botaoid"));
            $("#dataInicial").val(Utils.primeiroDiaMes(task.itemExtrato.DataLancamento, 'MDY'));
            $("#dataFinal").val(Utils.ultimoDiaMes(task.itemExtrato.DataLancamento, 'MDY'));

            vinculoBuscaDialog.dialog("open");

            consultarPeriodo(getTitulosPendentes);
        });

        $('#efetivar').click(function(){

            var data = [];

            tasks.forEach(function(t){
                var temp = {
                    titulosSelecionados: t.titulosSelecionados,
                    titulosIncluidos: t.titulosIncluidos,
                    itemExtrato: t.itemExtrato
                };

                data.push(temp);
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ConciliarTitulos")',
                data: {
                    "titulosAVincular": JSON.stringify(data)
                },
                success: function() {
                    location.href = '@Url.Action("Index", "Home")';
                },
                error: function(object) {
                    var htmlResponse = document.createElement('html');
                    htmlResponse.innerHTML = object.responseText;
                    var erro = htmlResponse.querySelector('h4').textContent;
                    location.href = '@Url.Action("Erro", "Importacao")?erro=' + erro;
                }
            });
        });

        $('.item-vinculo').show(function(){
            $('.item-vinculo').delay(1000).animate({opacity:100}, 3000);
        });
    }());

</script>


<style>
    .item-vinculo {
    }

    .item-extrato {
        border: 1px solid grey;
        box-shadow: 5px 5px 30px grey;
        padding-bottom: 20px;
    }

    .extrato-table {
        border: 1px solid;
        margin-top: 10px;
        margin-bottom: 20px;
        margin-left: 60px;
        table-layout: fixed;
        width: 90%;
        font-size: 12px;
    }

        .extrato-table > tbody > tr > td {
            width: 200px;
        }

        .extrato-table > thead {
            background-color: lightgray;
            border: 1px solid grey;
            width: 100px;
            z-index: 0;
        }

            .extrato-table > thead > th {
                border: 1px solid black;
                margin: 100px;
            }

    .dialog {
        width: 100%;
    }

    #vinculoBuscaDialog > table {
        border: 1px solid;
        margin-top: 10px;
        margin-bottom: 10px;
        margin-left: 60px;
        table-layout: fixed;
        font-size: 13px;
        -ms-word-wrap: break-word;
        word-wrap: break-word;
    }

    /*Tabela de titulos a ser vinculados*/
    #titulosAVincularLista input {
    }

    /*Painel pariodo*/
    #painel-periodo {
        height: 0;
        font-size: 12px;
        width: 90%;
        height: 40px;
        background: grey;
        float: left;
        margin-left: 5%;
    }

        #painel-periodo .panel {
            margin-bottom: 3px;
            border-radius: 0;
            height: auto;
            border: 1px solid black;
        }

        #painel-periodo .panel-body {
            padding-top: 3px;
            padding-bottom: 3px;
        }

        #painel-periodo .panel-heading {
            margin-bottom: 3px;
            border-radius: 0;
            padding-top: 3px;
            padding-bottom: 3px;
        }

    /*Lista de titulos já vinculados*/
    #titulosVinculados, #titulosCriar {
        font-size: 12px;
    }

        #titulosVinculados input[type=text] {
            width: 70px;
        }

        #titulosVinculados th {
        }

        #titulosVinculados > tbody > tr > td {
        }

        #titulosVinculados td {
        }
</style>
