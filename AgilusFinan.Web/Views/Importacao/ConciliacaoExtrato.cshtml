@{
    ViewBag.Title = "Vinculo de Titulos";
}

@using AgilusFinan.Domain.Entities
@using AgilusFinan.Web.Bases
@using AgilusFinan.Web.ViewModels
@model List<ConciliacaoExtrato>
<h2>Vinculo Extrato/Titulos</h2>

@{
    var extratoId = 0;
}

<div id="dialog-form" class="dialog" title="Vincular títulos">
    <div id="painel-periodo">
        @Html.Partial("_PainelPeriodo")
    </div>
</div>

<div id="cadastroTituloDialog" class="dialog" title="Cadastrar título">
    <div class="form-horizontal">
        @Html.Partial("_CadastroTitulo", new TituloViewModel())
    </div>
</div>

<button class="button" id="efetivar">Efetivar</button>

<div class="item-vinculo">
    @foreach (var vinculo in Model)
    {
        <div class="row">
            <div class="col-md-10">
                <div class="list-group item-extrato" data-extratoId=@extratoId>
                    <table class="extrato-table">
                        <thead>
                            <tr>
                                <th>Data Lancamento</th>
                                <th>Descricao</th>
                                <th>Valor</th>
                                <th>Tipo de lançamento</th>
                            </tr>
                        </thead>

                        <tbody>
                            <tr>
                                <td>@vinculo.DataLancamento.Date.ToShortDateString()</td>
                                <td>@vinculo.Descricao</td>
                                <td>@vinculo.Valor</td>
                                <td>@vinculo.TipoLancamento</td>
                            </tr>
                        </tbody>
                    </table>
                    <hr />

                    <div class="row">
                        <div class="col-md-12">                            
                            <p>Soma dos títulos (c/ acrescimos): <span id="valorSomatoria"></span></p>
                            <table class="table" id="titulosVinculados">
                                <thead>
                                    <tr>
                                        <th>Operação</th>
                                        <th>ID</th>
                                        <th>ID Titulo Recorrente</th>
                                        <th>Descrição</th>
                                        <th>Valor</th>
                                        <th>Direção</th>
                                        <th>Data de vencimento</th>
                                        <th>Acréscimos</th>
                                        <th>Descontos</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <table class="table" id="titulosCriar">
                                <thead>
                                    <tr>
                                        <th>Operação</th>
                                        <th>Categoria</th>
                                        <th>Centro Custo</th>
                                        <th>Competencia</th>
                                        <th>DataVencimento</th>
                                        <th>Descricao</th>
                                        <th>Observaçao</th>
                                        <th>Pessoa </th>
                                        <th>Valor</th>
                                    </tr>
                                </thead>

                            </table>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-2 col-sm-offset-1">
                            <button class="btn btn-default vincularTitulos" data-botaoid=@extratoId>Buscar</button> <br />
                            
                        </div>
                        <div class="col-sm-2 ">
                            <button class="btn btn-default adicionarTitulo"  data-botaoid=@extratoId>Adicionar</button> <br />

                        </div>
                    </div>
                </div>
                @{
                     extratoId = extratoId + 1;
                }
            </div>
        </div>

    }
</div>


<script>
    var teste;
    var text;
    
    //objeto extrato
    var Task = function (id) {
        this.itemExtratoId = id;
        this.isNew = true;
        this.titulosSelecionados = [];
        this.titulosIncluidos = [];
        this.ignorar = false;
        this.observer = {};
        this.selecionado = false;
        
        var vincularTitulo = function(titulo, observer) {
            this.observer = observer;
            this.titulosSelecionados.push(titulo);
        };

        var desvincularTitulo = function(titulo) {
            this.titulosSelecionados.forEach(function(t, index, titulos) {

                if (titulo.TituloId == t.TituloId) {
                    titulos.splice(index, 1);
                }

            });

        };

        var somaTitulos = function() {
            var soma = 0;
            if (this.titulosSelecionados) {
                this.titulosSelecionados.forEach(function(titulo, index, titulos) {
                    soma += (titulo.Valor + (titulo.Acrescimos? titulo.Acrescimos : 0));
                });
                return soma;
            } else {
                return 0;
            }
        };

        return {
            itemExtratoId: this.itemExtratoId,
            selectionado: this.selecionado,
            isNew: this.isNew,
            titulosSelecionados: this.titulosSelecionados,
            titulosIncluidos: this.titulosIncluidos,
            vincularTitulo: vincularTitulo,
            desvincularTitulo: desvincularTitulo,
            somaTitulos: somaTitulos
        }

    }

    var conciliacaoExtratoController = (function () {
        //variaveis
        var tasks = [];
        var task = {};
        var extratoElement;        
        var itemExtrato = {};
        var taskUndo = {};
        var valorTotal;

        //Metodos
        var updateModal = function () {
            extratoElement.find('#valorSomatoria').html(task.somaTitulos());
        }

        var convertDate = function (date) {
            var dia = date.substring(0, 2);
            var mes = date.substring(3, 5);
            var ano = date.substring(6, 10);

            return mes + "/" + dia + "/" + ano;
        };

        var getItemExtrato = function() {
            var extratoColunas = extratoElement.find("table > tbody > tr > td");
            itemExtrato.DataLancamento = convertDate(extratoColunas[0].innerHTML).substring(0, 10);
            itemExtrato.Descricao = extratoColunas[1].innerHTML;
            itemExtrato.Valor = parseFloat(extratoColunas[2].innerHTML.replace(",", ".")).toFixed(2);
            itemExtrato.TipoLancamento = extratoColunas[3].innerHTML;

            return itemExtrato;
        };

        var getItemTitulo = function(element) {
            var tr = element.closest('tr');
            var titulo = {};

            titulo.TituloId = Utils.getValue(tr.find('[name=TituloId]')) == ""? null : Utils.getValue(tr.find('[name=TituloId]')) ;
            titulo.TituloRecorrenteId = Utils.getValue(tr.find('[name=TituloRecorrenteId]')) == ""? null : Utils.getValue(tr.find('[name=TituloRecorrenteId]'));
            titulo.Descricao = Utils.getValue(tr.find('[name=Descricao]'));
            titulo.Valor = Math.round(parseFloat(Utils.getValue(tr.find('[name=Valor]')).replace('R$ ', '').replace(',', '.')), 2);
            
            titulo.Direcao = Utils.getValue(tr.find('[name=Direcao]'));
            titulo.DataVencimento = Utils.getValue(tr.find('[name=DataVencimento]')).substring(0,10);
            titulo.Acrescimo = Utils.getValue(tr.find('[name=Acrescimo]')) != ''? parseFloat(Utils.getValue(tr.find('[name=Acrescimo]'))) : 0.00;
            titulo.Desconto = titulo.Acrescimo = Utils.getValue(tr.find('[name=Acrescimo]')) != ''? parseFloat(Utils.getValue(tr.find('[name=Acrescimo]'))): 0.00;
            return titulo;
        }

        //Titulos Vinculados
        var limpaTitulosVinculados = function () {
            extratoElement.find('#titulosVinculados > tbody').remove();
            extratoElement.find('#titulosCriar > tbody').remove();
        }

        var setTitulosVinculados = function (titulos, operacao) {
            var tableVinculo = extratoElement.find("#titulosVinculados");
            var tableCriar = extratoElement.find("#titulosCriar");
            for (var i = 0; i < titulos.length; i++) {
                var tr = document.createElement('tr');
                var td;
                var titulo = titulos[i];

                var tdOperacao = document.createElement('td');
                tdOperacao.innerHTML = operacao;
                tr.appendChild(tdOperacao);
                
                for (var prop in titulo) {
                    td = document.createElement('td');
                    td.innerHTML = titulo[prop];
                    tr.appendChild(td);
                }

                if(operacao == 'vinculo'){
                    tableVinculo.append(tr);
                }
                
                if(operacao == 'novo'){
                    tableCriar.append(tr);
                }

            }
        }

        //Titulos selecionados
        var setTitulosSelecionados = function () {
            var inputs = $('#titulosAVincularLista').find('input:checkbox');
            
            $.each(inputs, function (input) {
                var titulo = getItemTitulo($(inputs[input]));                
                var isSelected = isTituloSelected(titulo);                
                var isRecorrenteSelected = isTituloRecorrenteSelected(titulo);
                var tituloExists = task.titulosSelecionados.some(ts => (ts.TituloId == titulo.TituloId) && ts.TituloId != null);
                var tituloRecorrenteExists = task.titulosSelecionados.some(ts => (ts.TituloRecorrenteId == titulo.TituloRecorrenteId) && ts.DataVencimento == titulo.DataVencimento);
                var tr = $(inputs[input]).closest('tr');
                
                if (!tituloExists && isSelected) {
                    $(inputs[input]).prop('disabled', true);
                }

                if (!tituloRecorrenteExists && isRecorrenteSelected) {
                    $(inputs[input]).prop('disabled', true);
                }
                
                task.titulosSelecionados.forEach(function (t) {

                    var acrescimoInput = tr.find('input[name="Acrescimo"]');
                    var descontoInput = tr.find('input[name="Desconto"]');
                    
                    if (t.TituloId == titulo.TituloId && titulo.TituloRecorrenteId == null) {
                        acrescimoInput.val(t.Acrescimo);
                        descontoInput.val(t.Desconto);
                        acrescimoInput.prop('disabled', false);
                        descontoInput.prop('disabled', false);
                        $(inputs[input]).prop('checked', true);
                    }

                    if(t.TituloRecorrenteId == titulo.TituloRecorrenteId && titulo.TituloId == null && t.DataVencimento == titulo.DataVencimento){
                        acrescimoInput.val(t.Acrescimos);
                        descontoInput.val(t.Desconto);
                        acrescimoInput.prop('disabled', false);
                        descontoInput.prop('disabled', false);
                        $(inputs[input]).prop('checked', true);
                    }

                });
            });

        }

        var conciliarTitulos = function () {
            limpaTitulosVinculados();
            setTitulosVinculados(task.titulosSelecionados, 'vinculo');
            setTitulosVinculados(task.titulosIncluidos, 'novo');
            dialog.dialog("close");
        }

        var dialog = $("#dialog-form").dialog({
            autoOpen: false,
            height: 700,
            width: 1000,
            modal: true,
            buttons: {
                Ok: {
                    text: "Vincular",
                    id: "vincular",
                    click: function() {
                        conciliarTitulos();                        
                        dialog.dialog("close");
                    }
                },
                Cancel: {
                    text: "Cancelar",
                    id: "Cancelar",
                    click: function(){
                        dialog.dialog("close")
                    }
                }
            },
            open: function () {
                initEvents();
            },
            close: function () {
                $("#dialog-form").off('click', 'input:checkbox');
                $('input').off('change input'); 
            }
        });

        var cadastroTituloDialog = $("#cadastroTituloDialog").dialog({
            autoOpen: false,
            height: 700,
            width: 1000,
            modal: true,
            buttons: {
                Ok: {
                    text: "Gravar",
                    id: "gravar",
                    click: function() {                        
                        task.titulosIncluidos.push(JSON.parse(CadastroTitulo.getData()));
                        conciliarTitulos();
                        cadastroTituloDialog.dialog('close');
                    }
                },
                Cancel: {
                    text: "Cancelar",
                    id: "Cancelar",
                    click: function(){
                        cadastroTituloDialog.dialog("close")
                    }
                }
            },
            open: function () {
                
            },
            close: function () {

            }
        });

        var getTitulosPendentes = function() {

            var dataInicial = $('#dataInicial').val();
            var dataFinal = $('#dataFinal').val();

            var dI = dataInicial.substring(8, 10) + '/' + dataInicial.substring(5, 7) + '/' + dataInicial.substring(0, 4);
            var dF = dataFinal.substring(8, 10) + '/' + dataFinal.substring(5, 7) + '/' + dataFinal.substring(0, 4);

            $.ajax({
                type: "GET",
                data: {
                    tituloAConciliar: JSON.stringify(itemExtrato),
                    dataInicial: dI,
                    dataFinal: dF
                },
                url: "@Url.Action("VinculoTitulos")",
                success: function (data) {
                    $("#painel-periodo>table").remove();
                    $("#painel-periodo").append(data);
                    setTitulosSelecionados();
                },
                error: function(error) {
                    console.log(error);
                }
            });

        }

        var findTask = function (id) {
            var t;
            extratoElement = $("[data-extratoId=" + id + "]");
            itemExtrato = getItemExtrato(id);

            for (var i = 0; i < tasks.length; i++) {
                if (tasks[i].itemExtratoId == id) {
                    t = tasks[i];
                    tasks[i].isNew = false;
                }

            };

            if(!t){
                t = new Task(id);
                task = t;
                tasks.push(task);
            }

            
            
        }

        var findTitulo = function(titulo){            
            var titulosSelecionados = task.titulosSelecionados;

            for(var i = 0; i < titulosSelecionados.length; i++){
                if(titulosSelecionados[i].TituloId == titulo.TituloId && titulosSelecionados[i].TituloId != null){
                    return titulosSelecionados[i];
                    
                }
                
                if(titulosSelecionados[i].TituloRecorrenteId == titulo.TituloRecorrenteId && titulosSelecionados[i].DataVencimento == titulo.DataVencimento){
                    return titulosSelecionados[i]
                }


            }
            return titulo;
        }

        var getItemTituloSelecionado = function(e){
            var itemAtual = getItemTitulo(e);
            var taskTitulo = findTitulo(itemAtual);  

            if(taskTitulo && taskTitulo.TituloId == itemAtual.TituloId){
                return taskTitulo;
            }else{
                return itemAtual;
            }
            
        }

        var isTituloSelected = function(titulo){
            for(var i = 0; i < tasks.length; i++){
                var titulos = tasks[i].titulosSelecionados;
                for(var j = 0; j < titulos.length; j++){                    
                    
                    if(titulos[j].TituloId == titulo.TituloId && titulos[j].TituloId != null){
                        return true;

                    }
                }
            }
            return false;
        }

        var isTituloRecorrenteSelected = function(tituloRecorrente){
            for(var i = 0; i < tasks.length; i++){
                var titulos = tasks[i].titulosSelecionados;
                
                for(var j = 0; j < titulos.length; j++){
                    if((titulos[j].TituloRecorrenteId == tituloRecorrente.TituloRecorrenteId 
                        && titulos[j].TituloRecorrenteId != null) 
                        && (titulos[j].DataVencimento == tituloRecorrente.DataVencimento)){
                        return true;
                    }

                }                    
            }
            return false;
        }

        //Titulos Criados
        var limpaCadastroTituloDialog = function(){
            
        }

        //Eventos
        var initEvents = function () {

            $('#dialog-form').on('input change', 'input[name="Acrescimo"]', function(e){
                var titulo = getItemTituloSelecionado($(this));                
                var getAcrescimo = () => parseFloat($(this).val().replace(',', '.'));     
                var getDesconto = () => parseFloat($(this).val().replace(',', '.'));
                titulo.Acrescimo = getAcrescimo();
                titulo.Desconto = getDesconto();
                
                updateModal();  
            });

            $("#dialog-form").on('click', 'input:checkbox', function (e) {                
                var titulo = getItemTituloSelecionado($(this));
                var acrescimoInput = $(this).closest('tr').find('input[name="Acrescimo"]');
                var descontoInput = $(this).closest('tr').find('input[name="Desconto"]');

                if ($(this).prop('checked')) {
                    acrescimoInput.prop('disabled', false);
                    descontoInput.prop('disabled', false);
                    task.vincularTitulo(titulo);
                } else {
                    acrescimoInput.prop('disabled', true);
                    descontoInput.prop('disabled', true);
                    acrescimoInput.val('');                    
                    task.desvincularTitulo(titulo);
                }
                updateModal();

            });

        }

        $('.adicionarTitulo').click(function(){
            findTask($(this).attr("data-botaoid"));
            titulosSelecionadoskUndo = JSON.stringify(task.titulosSelecionados);
            cadastroTituloDialog.dialog('open');
        });

        $(".vincularTitulos").click(function () {
            findTask($(this).attr("data-botaoid"));

            titulosSelecionadoskUndo = JSON.stringify(task.titulosSelecionados);

            $("#dataInicial").val(Utils.primeiroDiaMes(itemExtrato.DataLancamento, 'MDY'));
            $("#dataFinal").val(Utils.ultimoDiaMes(itemExtrato.DataLancamento, 'MDY'));

            dialog.dialog("open");
            updateModal();

            consultarPeriodo(getTitulosPendentes);
            
        });

        $('#efetivar').click(function(){
            var titulosSemVinculo = JSON.stringify(tasks);
            $.ajax({
                type: 'POST',
                url:'@Url.Action("ConciliarTitulos")',
                data: {"titulosAVincular": titulosSemVinculo},
                        //JSON.stringify(tasks)
                
                success:function(){
                    console.log("Titulos enviado!");
                },
                error:function(err){
                    text = err;
                    console.log(err);
                    console.log('Erro no ajax!');
                }


            })

        });

    }());


</script>


<style>
    
    .item-extrato {
        border: 1px solid grey;
        box-shadow: 5px 5px 30px grey;
        padding-bottom: 20px;
    }
   
     .extrato-table {
         border: 1px solid;
         margin-top: 10px;
         margin-bottom: 20px;
         margin-left: 60px;
         table-layout: fixed;
         width: 90%;
         font-size: 12px;
     }

    .extrato-table > tbody > tr > td {
        width: 200px;
    }

    .extrato-table > thead {
        background-color: lightgray;
        border: 1px solid grey;
        width: 100px;
        z-index: 0;
    }

    .extrato-table > thead > th {
        border: 1px solid black;
        margin: 100px;
    }

    .dialog {
        width: 100%;
    }
    
    #dialog-form > table {
        border: 1px solid;
        margin-top: 10px;
        margin-bottom: 10px;
        margin-left: 60px;
        table-layout: fixed;
        font-size: 13px;
        -ms-word-wrap: break-word;
        word-wrap: break-word;
    }

    /*Painel pariodo*/
    #painel-periodo {        
        height: 0;
        font-size: 12px;
        width: 70%;
        height: 40px;
        background: grey;
        float: left;
        margin-left: 10%;
    }
    #painel-periodo .panel {
        margin-bottom: 3px;
        border-radius: 0;
        height: auto;
        border: 1px solid black
    }

    #painel-periodo .panel-body {
        padding-top: 3px;
        padding-bottom: 3px;
    }

    #painel-periodo .panel-heading {
        margin-bottom: 3px;
        border-radius: 0;
        padding-top: 3px;
        padding-bottom: 3px;
    }

     #titulosAVincularLista {
         width: 0;
         padding: 0;
         height: 0;      
         padding-right: 10px;
    }

     #titulosAVincularLista input{     
         width: 85px;
     }

    #titulosAVincularLista td{     
         padding: 0 15px 0 15px;
     }


    /*Lista de titulos já vinculados*/
    #titulosVinculados, #titulosCriar{        
        font-size: 12px;        
    }

    #titulosVinculados th{
        font-size: 12px;
    }
       
    #titulosVinculados > tbody > tr > td {
        font-size: 12px;
    }

    #titulosVinculados td {
        
    }


</style>
