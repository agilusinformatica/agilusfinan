@using AgilusFinan.Web.ViewModels
@model AgilusFinan.Domain.Entities.TituloRecorrente

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recorrencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Recorrencia, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Recorrencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaVencimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="SelecaoDiaVencimento">
                @Html.EditorFor(model => model.DiaVencimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaVencimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QtdeParcelas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtdeParcelas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QtdeParcelas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Ativo)
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PessoaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PessoaId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="CategoriaId" id="CategoriaId" class="form-control">
                    @Html.Partial("~/Views/Categoria/_ItensCategoria.cshtml", new ItensCategoria() { Id = Model.CategoriaId, Lista = ViewBag.ListaCategorias })
                </select>
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCadastro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="divDataCadastro">
                @Html.EditorFor(model => model.DataCadastro, new { htmlAttributes = new { @class = "form-control" } })
                <span id="msgErroDataCadastro" class="text-danger field-validation-valid" data-valmsg-for="FieldDataCadastro" data-valmsg-replace="true">Para prosseguir é necessário atualizar a data de ínicio a partir de hoje</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFinal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataFinal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataFinal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CentroCustoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CentroCustoId", null, String.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CentroCustoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary" id="gravar" data-loading-text="Salvando..." ><i class="fa fa-check"></i> Gravar</button>
                @if (ViewBag.TipoOperacao == "Incluindo")
                {
                    <input type="submit" value="Gravar e Incluir um novo" class="btn btn-primary" onclick="Utils.manterTela($('form'))" />
                }
                @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $('#gravar').on('click', function () {
        var $btn = $(this).button('loading');
    });
    var dataCorrente = '@DateTime.Now.ToShortDateString()';
    var dataInicioCarregamento = '@Model.DataCadastro.Date.ToShortDateString()';
    var PeriodicidadeCarregamento = '@Convert.ToInt16(Model.Recorrencia)';
    var DiaVencimentoCarregamento = '@Model.DiaVencimento.ToString()';

    document.getElementsByTagName('form')[1].addEventListener('submit', ValidarAlteracaoDataInicioPost);
    $("#Recorrencia").change(EscondeMostraMsgErro);
    $("#Recorrencia").change(CarregarDiasSemana);
    $("#DataCadastro").change(EscondeMostraMsgErro);
    $('#msgErroDataCadastro').hide();
    Utils.createMask(document.getElementById("Valor"), "moeda");
    CarregarDiasSemana();



    function CarregarDiasSemana() {
        var value = $("#DiaVencimento").val();
        $("#SelecaoDiaVencimento").html("");
        var tiposRecorrencia = $("#Recorrencia");
        if (tiposRecorrencia.val() == 0 || tiposRecorrencia.val() == 1) {
            document.getElementById("SelecaoDiaVencimento").innerHTML =
                   '<select id="DiaVencimento" name="DiaVencimento" class="form-control">' +
                   '<option></option>' +
                   '<option value="1">Domingo</option>' +
                   '<option value="2">Segunda-feira</option>' +
                   '<option value="3">Terça-feira</option>' +
                   '<option value="4">Quarta-feira</option>' +
                   '<option value="5">Quinta-feira</option>' +
                   '<option value="6">Sexta-feira</option>' +
                   '<option value="7">Sábado</option></select>';
        }
        else {
            document.getElementById("SelecaoDiaVencimento").innerHTML =
                   '<input type="number" id="DiaVencimento" name="DiaVencimento" class="form-control"/>';
        }
        $("#DiaVencimento").val(value);
        $("#DiaVencimento").change(EscondeMostraMsgErro);
    }

    function EscondeMostraMsgErro() {
        if (verificaAlteracoes()) {
            $('#msgErroDataCadastro').show();
        }
        else {
            $('#msgErroDataCadastro').hide();
        }
    }

    function ValidarAlteracaoDataInicioPost() {

        if ('@ViewBag.TipoOperacao' === "Alterando") {
            if (verificaAlteracoes()) {
                event.preventDefault();
            }
        }
    }

    function verificaAlteracoes()
    {
        if ('@ViewBag.TipoOperacao' === "Alterando")
            return (
                    (PeriodicidadeCarregamento != document.getElementById('Recorrencia').value) ||
                    (DiaVencimentoCarregamento != document.getElementById('DiaVencimento').value) ||
                    (dataInicioCarregamento != document.getElementById('DataCadastro').value)
                   ) &&
                   (
                     Utils.convertFormatDate(document.getElementById('DataCadastro').value) < Utils.convertFormatDate(dataCorrente)
                   );
    }
</script>
